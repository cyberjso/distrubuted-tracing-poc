version: "3.5"

services:

  jaeger-agent:
    hostname: 'jaeger-agent'
    container_name: 'jaeger-agent'
    image: jaegertracing/jaeger-agent
    command: [ "--reporter.grpc.host-port=otel-col:14260"]
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
    links:
      - otelcol
    depends_on:
      - otelcol

  jaeger:
    hostname: 'jaeger'
    container_name: 'jaeger'
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
      - 4317
    environment:
      - 'COLLECTOR_OTLP_ENABLED=true'

  address-api:
    build:
      context: '.'
      dockerfile: 'Dockerfile-Address-Api'
    hostname: 'address-api'
    container_name: 'address-api'
    ports:
      - 8081:8081
    links:
      - jaeger-agent
    environment:
      - 'JAEGER_SAMPLER_TYPE=probabilistic'
      - 'JAEGER_SAMPLER_PARAM=1'
      - 'JAEGER_SAMPLER_MANAGER_HOST_PORT=jeager:5778'
      - 'JAEGER_REPORTER_LOG_SPANS=true'
      - 'JAEGER_AGENT_HOST=jaeger-agent'
      - 'JAEGER_AGENT_PORT=6831'
      - 'JAEGER_REPORTER_FLUSH_INTERVAL=1000'
      - 'JAEGER_REPORTER_MAX_QUEUE_SIZE=100'
      - 'JAEGER_SERVICE_NAME=address-api'

  person-api:
    build:
      context: '.'
      dockerfile: 'Dockerfile-Person-Api'
    hostname: 'person-api'
    container_name: 'person-api'
    ports:
      - 8080:8080
    links:
      - jaeger-agent
      - address-api
    environment:
      - 'ADDRESS_API_HOST=address-api'
      - 'JAEGER_SAMPLER_TYPE=probabilistic'
      - 'JAEGER_SAMPLER_PARAM=1'
      - 'JAEGER_SAMPLER_MANAGER_HOST_PORT=jeager:5778'
      - 'JAEGER_REPORTER_LOG_SPANS=true'
      - 'JAEGER_AGENT_HOST=jaeger-agent'
      - 'JAEGER_AGENT_PORT=6831'
      - 'JAEGER_REPORTER_FLUSH_INTERVAL=1000'
      - 'JAEGER_REPORTER_MAX_QUEUE_SIZE=100'
      - 'JAEGER_SERVICE_NAME=person-api'

  postgres:
    image: postgres
    container_name: application-db
    hostname: application-db
    volumes:
      - ./address-api/src/main/resources/01-address-table.sql:/docker-entrypoint-initdb.d/01-address-table.sql
      - ./address-api/src/main/resources/02-address-data.sql:/docker-entrypoint-initdb.d/02-address-data.sql
    environment:
      POSTGRES_PASSWORD: "admin123"
    ports:
      - "5432:5432"

  otelcol:
    image: otel/opentelemetry-collector-contrib:0.76.1
    container_name: otel-col
    hostname: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/opentelemetry-collector.yaml" ]
    volumes:
      - ./opentelemetry-config/opentelemetry-collector.yaml:/etc/opentelemetry-collector.yaml
    ports:
      - "4317"          # OTLP over gRPC receiver
      - "4318:4318"     # OTLP over HTTP receiver
      - "14260:14260"   # jeager receiver
      - "8888"          # metrics endpoint
    links:
      - tempo
      - jaeger
    depends_on:
      - jaeger
      - tempo

  tempo:
    image: grafana/tempo:latest
    hostname: grafana-tempo
    container_name: grafana-tempo
    command: [ "-multitenancy.enabled=false", "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./opentelemetry-config/tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin
    links:
      - prometheus
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    hostname: 'prometheus'
    container_name: 'prometheus'
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./opentelemetry-config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.4.3
    hostname: 'grafana'
    container_name: 'grafana'
    volumes:
      - ./opentelemetry-config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    depends_on:
      - prometheus
      - tempo
    links:
      - prometheus
      - tempo
    ports:
      - "3000:3000"
